name = "phantom-gateway-worker" # The deploy script might use a different name based on variables
main = "worker.js"
compatibility_date = "2024-05-20" # Use a recent compatibility date

# Enables some Node.js APIs, though the worker code provided aims for Web APIs.
# Good to have if other parts of the worker might inadvertently use Node.js patterns.
compatibility_flags = ["nodejs_compat"]

# Secrets are set by the deploy-ultimate.sh script using 'wrangler secret put':
# AUTH_SECRET
# TUNNEL_HOST
# TUNNEL_PORT

[[d1_databases]]
binding = "DB" # How you access it in the worker code (e.g., env.DB)
database_name = "phantom-db"
database_id = "YOUR_D1_DATABASE_ID_PLACEHOLDER" # Populated by deploy-ultimate.sh

[[kv_namespaces]]
binding = "PHANTOM_STREAMS" # How you access it in the worker code (e.g., env.PHANTOM_STREAMS)
# The deploy-ultimate.sh script creates a namespace titled PHANTOM_STREAMS and gets its ID.
# 'id' is the production ID.
id = "YOUR_KV_NAMESPACE_ID_PLACEHOLDER" # Populated by deploy-ultimate.sh
# 'preview_id' is used for `wrangler dev`. For simplicity, can be the same as 'id' if not managing separate preview envs.
# If not specified, `wrangler dev` might complain or try to create one.
# The deploy script focuses on production 'id'.
preview_id = "YOUR_KV_NAMESPACE_ID_PLACEHOLDER" # Can be same as id or a different one for dev

# Example for enabling TCP sockets for `connect()` to work if it's not enabled by default
# [experimental]
# sockets = true # As of recent dates, connect() is generally available. This might not be needed.

# Ensure your account plan supports the features used (Workers, D1, KV, Cloudflare Tunnel).
# Free tier usually allows sufficient usage for typical Phantom Gateway scenarios.
